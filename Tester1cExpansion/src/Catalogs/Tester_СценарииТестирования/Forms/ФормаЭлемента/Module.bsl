

///////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
///////////////////////Обработчики Событий Формы \\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////\\\\\\\\\\\\\\\///////////////\\\\\\\\\\\\\\///////////////

#Область СобытияФормы

//@skip-check module-empty-method
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
КонецПроцедуры

//@skip-check module-empty-method
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
///////////////////////Обработчики Событий Команд\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////\\\\\\\\\\\\\\\///////////////\\\\\\\\\\\\\\///////////////

#Область КомандыФормы

&НаКлиенте
Процедура ОчиститьВсеНепредопределенныеДанныеВБД(Команда)
	МодифицируемыеПараметры = новый Структура;
	
	Если НЕ TesterСрв.ОчиститьВсеНепредопределенныеДанныеВ_БД(новый ФиксированнаяСтруктура,МодифицируемыеПараметры) Тогда
		СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		СообщениеОшибки = "Не удалось произвести очистку данных в базе, по причине:" + Символы.ПС + СообщениеОшибки;
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтотОбъект);
		Возврат;
	КонецЕсли;
	
	КиурКл.ОтобразитьПредупреждение("Очистка выполнена.",ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

///////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
///////////////////////Обработчики Событий Элементов\\\\\\\\\\\\\\\\\\\\\\\
////////////////\\\\\\\\\\\\\\\///////////////\\\\\\\\\\\\\\///////////////

#Область ЭлементыФормы

#Область ШагиСценария

&НаКлиенте
Процедура ШагиСценарияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Объект.ШагиСценария.НайтиПоИдентификатору(ВыбраннаяСтрока);
			
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
		
	Если Поле.Имя = "ШагиСценарияИмяШага" Тогда
		ОбработатьДаблКликПоПолю_ИмяШага(ТекущаяСтрока);		
	ИначеЕсли Поле.Имя = "ШагиСценарияМетодПредварительныхДействий" Тогда
		
	ИначеЕсли Поле.Имя = "ШагиСценарияПредварительныеДействияВыполнены" Тогда	
		ОбработатьДаблКликПоПолю_ПредварительныеДействияВыполнены(ТекущаяСтрока);		
	ИначеЕсли Поле.Имя = "ШагиСценарияМетодПостПроверки" Тогда
		
	ИначеЕсли Поле.Имя = "ШагиСценарияПостПроверкаВыполнена" Тогда
		 ОбработатьДаблКликПоПолю_ПостПроверкаВыполнена(ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ШагиСценарияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ШагиСценарияДобавлениеСтроки();
КонецПроцедуры    
 
#КонецОбласти 

#Область СтартовыеДанные

&НаКлиенте
Процедура СтартовыеДанныеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина; 
	
	ТранзитныеПараметры = новый Структура;	
	ОповещениеОтвета = новый ОписаниеОповещения("СтартовыеДанныеПередНачаломДобавления_ВыбиратьСуществующие", ЭтотОбъект, ТранзитныеПараметры);
	ПоказатьВопрос(ОповещениеОтвета, "Выбрать из уже существующих стартовых данных?",РежимДиалогаВопрос.ДаНетОтмена);	
КонецПроцедуры

&НаКлиенте
Процедура СтартовыеДанныеПередНачаломДобавления_ВыбиратьСуществующие(ОтветНаВопрос, ТранзитныеПараметры) ЭКСПОРТ
	Если ОтветНаВопрос <> КодВозвратаДиалога.Да И ОтветНаВопрос <> КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
		
	ТранзитныеПараметры = КиурКл.ПолучитьСтруктуруТранзитныхПараметровФормыВыбора();
	ТранзитныеПараметры.ДопДействие = "СтартовыеДанныеДобавлениеСтроки(РезультатВыбора, ТранзитныеПараметры)";
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		ТранзитныеПараметры.ТекстНадписи = "Введите имя стартового набора данных.";
	Иначе
		ТекстЗапроса = TesterКлСрв.ПолучитьТекстЗапросаДляВыбораШаблонныхДанных(Ложь);
		
		ТранзитныеПараметры.ТекстНадписи = "Выберите существующую xml с данными.";
		ТранзитныеПараметры.ВыборИзТаблицы = Истина;
		ТранзитныеПараметры.ЗаголовокВыбираемогоПоля = "ИдентификаторШаблона";
		ТранзитныеПараметры.СтруктураЗапроса.ТекстЗапроса = ТекстЗапроса;
		ТранзитныеПараметры.ВернутьСтруктуруСтрокиТаблицы = Истина;
	КонецЕсли;
		
	КиурКл.ОтобразитьВыборЗначения(ЭтаФорма,ТранзитныеПараметры);
КонецПроцедуры	

&НаКлиенте
Процедура СтартовыеДанныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = Объект.СтартовыеДанные.НайтиПоИдентификатору(ВыбраннаяСтрока);
			
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "СтартовыеДанныеЗагрузитьДанныеИзXML" Тогда
		ОбработатьДаблКликПоПолю_ЗагрузитьДанныеИзXML(ТекущаяСтрока);//ЗАпись в БД из XML
		Возврат;
	ИначеЕсли Поле.Имя = "СтартовыеДанныеИзменитьXML" Тогда
		ОбработатьДаблКликПоПолю_ИзменитьXML(ТекущаяСтрока); //Загрузка нового XML файла
		Возврат;
	ИначеЕсли Поле.Имя = "СтартовыеДанныеВыгрузитьXML" Тогда	
		ОбработатьДаблКликПоПолю_ВыгрузитьXML(ТекущаяСтрока); //Выгрузка XML в  файл
		Возврат;
	ИначеЕсли Поле.Имя = "СтартовыеДанныеИмяНабораСтартовыхДанных" Тогда
		ОбработатьДаблКликПоПолю_ИмяНабораСтартовыхДанных(ТекущаяСтрока);	
		Возврат;
	КонецЕсли; 
	
	//Если попали в поле которое можно стандартно тыкать.
	//@skip-check event-heandler-boolean-param
	СтандартнаяОбработка = Истина;	
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

///////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////Служебные методы\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////\\\\\\\\\\\\\\\///////////////\\\\\\\\\\\\\\///////////////
//Tester_Срв_АдаптацияПодКонкретнуюБД.ТестПроцедураКарты  

#Область Служебные 

#Область ШагиСценария

&НаКлиенте
Процедура ОбработатьДаблКликПоПолю_ИмяШага(ТекущаяСтрока)
	ТранзитныеПараметры = новый Структура;
	ТранзитныеПараметры.Вставить("ТекущаяСтрока",ТекущаяСтрока);
	ОповещениеЗакрытия = новый ОписаниеОповещения("ЗавершениеРедактированияШага",ЭтаФорма,ТранзитныеПараметры);
	
	ФиксированныеПараметры = новый Структура;
	ФиксированныеПараметры.Вставить("UIDОбъекта",ТекущаяСтрока.UIDШага);
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	МодифицируемыеПараметры = новый Структура;
		
	ШаблонныеДанныеДляПостПроверки = ПолучитьШаблонныеДанныеОбъектаСрв(ФиксированныеПараметры,МодифицируемыеПараметры);
	Если ШаблонныеДанныеДляПостПроверки = Неопределено Тогда
		СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		СообщениеОшибки = "Не удалось прочитать запись из регистра шаблонных данных, по причине:" + Символы.ПС + СообщениеОшибки;
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
		Возврат;	
	КонецЕсли;	
	
	ПараметрыОткрытия = новый Структура;
	ПараметрыОткрытия.Вставить("ИмяШага",ТекущаяСтрока.ИмяШага);
	ПараметрыОткрытия.Вставить("МетодПредварительныхДействий",ТекущаяСтрока.МетодПредварительныхДействий);
	ПараметрыОткрытия.Вставить("МетодПостПроверки",ТекущаяСтрока.МетодПостПроверки); 
	ПараметрыОткрытия.Вставить("ШаблонныеДанныеДляПостПроверки",ШаблонныеДанныеДляПостПроверки); 
	
	ОткрытьФорму("Справочник.Tester_СценарииТестирования.Форма.ФормаШагаСценария",ПараметрыОткрытия,ЭтаФорма,,,,ОповещениеЗакрытия,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДаблКликПоПолю_ПредварительныеДействияВыполнены(ТекущаяСтрока)
	
	МетодПредварительныхДействий = ТекущаяСтрока.МетодПредварительныхДействий;
	
	Если ПустаяСтрока(МетодПредварительныхДействий) Тогда
		КиурКл.ОтобразитьПредупреждение("Не указан метод предварительных действий.",ЭтаФорма);		
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.Модифицированность Тогда
		КиурКл.ОтобразитьПредупреждение("Элемент не сохранен. Выполните сохранение, т.к. могут сбиться идентификаторы шаблонных данных.",ЭтаФорма);
		Возврат;
	КонецЕсли;	
	
	ПредыдущаяСтрока = Объект.ШагиСценария.НайтиПоИдентификатору(ТекущаяСтрока.ПолучитьИдентификатор() - 1); // Или как-то по другому правильнее определять?....	
	UID_ПредыдущегоШага = ?(ПредыдущаяСтрока = Неопределено,Неопределено,ПредыдущаяСтрока.UIDШага);
	ИмяШага = ТекущаяСтрока.ИмяШага;
	UIDШага = ТекущаяСтрока.UIDШага;
	
	ФиксированныеПараметры = новый Структура;
	ФиксированныеПараметры.Вставить("UID_ПредыдущегоШага",UID_ПредыдущегоШага);
	ФиксированныеПараметры.Вставить("UIDШага",UIDШага);
	ФиксированныеПараметры.Вставить("ИмяШага",ИмяШага);
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	МодифицируемыеПараметры = новый Структура;
	
	Попытка
		Выполнить МетодПредварительныхДействий + "(ФиксированныеПараметры, МодифицируемыеПараметры)"; 
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		
		ТекущаяСтрока.ПредварительныеДействияВыполнены = Ложь;		
		СообщениеОшибки = "Метод: " + МетодПредварительныхДействий + Символы.ПС + "Не удалось выполнить предварительные действия, по причине:" + Символы.ПС + ОписаниеОшибки;
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
		Возврат;
	КонецПопытки;
	
	ТекущаяСтрока.ПредварительныеДействияВыполнены = МодифицируемыеПараметры.Успешно;
	СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
	Если НЕ ПустаяСтрока(СообщениеОшибки) Тогда
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
		Возврат;
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДаблКликПоПолю_ПостПроверкаВыполнена(ТекущаяСтрока)
	
	МетодПостПроверки = ТекущаяСтрока.МетодПостПроверки; 
	UID_ТекущегоШага = ?(ЗначениеЗаполнено(ТекущаяСтрока.UIDШага),ТекущаяСтрока.UIDШага,Неопределено);
	
	ФиксированныеПараметры = новый Структура;
	ФиксированныеПараметры.Вставить("UID_ТекущегоШага",UID_ТекущегоШага);
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
		
	МодифицируемыеПараметры = новый Структура;
		
	Если ПустаяСтрока(МетодПостПроверки) Тогда
		
		Если НЕ ЗначениеЗаполнено(UID_ТекущегоШага) Тогда
			ТекущаяСтрока.ПостПроверкаВыполнена = Ложь;
			КиурКл.ОтобразитьПредупреждение("Не заполнен UID Шаблонных Данных шага",ЭтаФорма);
			Возврат;
		КонецЕсли;
		
		Если НЕ TesterСрв.ВыполненаСтандартнаяСверкаШаблонныхДанных(ФиксированныеПараметры,МодифицируемыеПараметры) Тогда
			ТекущаяСтрока.ПостПроверкаВыполнена = Ложь;
			СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
			ХранилищаСводныхТаблицРазличий = ?(МодифицируемыеПараметры.Свойство("ХранилищаСводныхТаблицРазличий",ХранилищаСводныхТаблицРазличий),ХранилищаСводныхТаблицРазличий,новый Соответствие);			
			КиурКл.ОтобразитьПредупреждение("Стандартная проверка шаблонных данных не выполнена, по причине:" + Символы.ПС + СообщениеОшибки,ЭтаФорма);
			Для каждого ИмяТаблицы_ХранЗначений из ХранилищаСводныхТаблицРазличий Цикл
				ПараметрыОкрытия = новый Структура;
				ПараметрыОкрытия.Вставить("ЗаголовокФормы",ИмяТаблицы_ХранЗначений.Ключ);
				ПараметрыОкрытия.Вставить("РучнойВводЗапроса", Ложь);
				ПараметрыОкрытия.Вставить("ТаблицаДляОтображения",ИмяТаблицы_ХранЗначений.Значение );
				ОткрытьФорму("ОбщаяФорма.Kiur_ФормаВыводаПроизвольнойТаблицы", ПараметрыОкрытия, ЭтаФорма,Истина,,,,РежимОткрытияОкнаФормы.Независимый);
			КонецЦикла;	 			
			Возврат;			
		КонецЕсли;  
		
		ТекущаяСтрока.ПостПроверкаВыполнена = Истина;
	Иначе
		
		Попытка
			Выполнить МетодПостПроверки + "(ФиксированныеПараметры, МодифицируемыеПараметры)"; 
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();		
			ТекущаяСтрока.ПостПроверкаВыполнена = Ложь;		
			СообщениеОшибки = "Метод: " + МетодПостПроверки + Символы.ПС + "Не удалось выполнить пост проверку шага, по причине:" + Символы.ПС + ОписаниеОшибки;
			КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
			Возврат;
		КонецПопытки;
	
		ТекущаяСтрока.ПостПроверкаВыполнена = МодифицируемыеПараметры.Успешно;
		СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		Если НЕ ПустаяСтрока(СообщениеОшибки) Тогда
			КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеРедактированияШага(РезультатЗакрытия,ТранзитныеПараметры) ЭКСПОРТ
	
	Если ТипЗнч(РезультатЗакрытия) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = ТранзитныеПараметры.ТекущаяСтрока;
	
	UIDШага = ТекущаяСтрока.UIDШага;
	ХранилищеШаблонныхДанных = РезультатЗакрытия.ШаблонныеДанныеДляПостПроверки;
	
	ФиксированныеПараметры = новый Структура;
	ФиксированныеПараметры.Вставить("UIDОбъекта",UIDШага);
	ФиксированныеПараметры.Вставить("НаименованиеШаблона","ИмяШага: " + РезультатЗакрытия.ИмяШага);
	ФиксированныеПараметры.Вставить("ХранилищеШаблонныхДанных",ХранилищеШаблонныхДанных);	
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	
	МодифицируемыеПараметры = новый Структура; 
	
	Если НЕ ЗаписатьШаблонныеДанныеОбъектаСрв(ФиксированныеПараметры,МодифицируемыеПараметры) Тогда
		СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		СообщениеОшибки = "Не удалось изменить запись в регистр шаблонных данных, по причине:" + Символы.ПС + СообщениеОшибки;
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = ТранзитныеПараметры.ТекущаяСтрока;
	ТекущаяСтрока.ИмяШага = РезультатЗакрытия.ИмяШага;     
	ТекущаяСтрока.МетодПредварительныхДействий = РезультатЗакрытия.МетодПредварительныхДействий;
	ТекущаяСтрока.МетодПостПроверки = РезультатЗакрытия.МетодПостПроверки;
	
	ТекстСообщения = ?(Записать(),"Шаг сценария изменен. -- " + ТекущаяДата(),"Не удалось изменить шаг сценария. -- " + ТекущаяДата());
	Сообщить(ТекстСообщения);		
КонецПроцедуры


&НаКлиенте
Процедура ШагиСценарияДобавлениеСтроки()
	ТранзитныеПараметры = новый Структура;
	ОповещениеЗакрытия = новый ОписаниеОповещения("ЗавершениеДобавленияСтроки",ЭтаФорма,ТранзитныеПараметры);
	
	ПараметрыОткрытия = новый Структура;
	ОткрытьФорму("Справочник.Tester_СценарииТестирования.Форма.ФормаШагаСценария",ПараметрыОткрытия,ЭтаФорма,,,,ОповещениеЗакрытия,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеДобавленияСтроки(РезультатЗакрытия,ТранзитныеПараметры) ЭКСПОРТ
	Если ТипЗнч(РезультатЗакрытия) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	UIDШага = новый УникальныйИдентификатор();
	ХранилищеШаблонныхДанных = РезультатЗакрытия.ШаблонныеДанныеДляПостПроверки;
	
	ФиксированныеПараметры = новый Структура;
	ФиксированныеПараметры.Вставить("UIDОбъекта",UIDШага);
	ФиксированныеПараметры.Вставить("НаименованиеШаблона","ИмяШага: " + РезультатЗакрытия.ИмяШага);
	ФиксированныеПараметры.Вставить("ХранилищеШаблонныхДанных",ХранилищеШаблонныхДанных);	
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	
	МодифицируемыеПараметры = новый Структура; 
	
	Если НЕ ЗаписатьШаблонныеДанныеОбъектаСрв(ФиксированныеПараметры,МодифицируемыеПараметры) Тогда
		СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		СообщениеОшибки = "Не удалось сделать запись в регистр шаблонных данных, по причине:" + Символы.ПС + СообщениеОшибки;
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
		Возврат;
	КонецЕсли;	
	
	нСтрока = Объект.ШагиСценария.Добавить();
	нСтрока.ИмяШага = РезультатЗакрытия.ИмяШага;
	нСтрока.МетодПредварительныхДействий = РезультатЗакрытия.МетодПредварительныхДействий;
	нСтрока.МетодПостПроверки = РезультатЗакрытия.МетодПостПроверки;
	нСтрока.UIDШага = UIDШага; 
	
	ТекстСообщения = ?(Записать(),"Шаг сценария добавлен. -- " + ТекущаяДата(),"Не удалось добавить шаг сценария. -- " + ТекущаяДата());
	Сообщить(ТекстСообщения);
КонецПроцедуры



#КонецОбласти   

#Область СтартовыеДанные

&НаКлиенте
Процедура СтартовыеДанныеДобавлениеСтроки(ИмяНабораСтартовыхДанных, ТранзитныеПараметры) ЭКСПОРТ
	Если НЕ ЗначениеЗаполнено(ИмяНабораСтартовыхДанных) Тогда
		Возврат;
	КонецЕсли;
	
	нСтрока = Объект.СтартовыеДанные.Добавить();
	Если ТипЗнч(ИмяНабораСтартовыхДанных) = Тип("Структура") Тогда
		нСтрока.ИмяНабораСтартовыхДанных = ИмяНабораСтартовыхДанных;
		нСтрока.UIDСтартовыхДанных = новый УникальныйИдентификатор();
		Возврат;		
	КонецЕсли;
		
	нСтрока.ИмяНабораСтартовыхДанных = ИмяНабораСтартовыхДанных;
	нСтрока.UIDСтартовыхДанных = новый УникальныйИдентификатор(ИмяНабораСтартовыхДанных.ЗначениеВыбора);
	
	ТекстСообщения = ?(Записать(),"Стартовые данные добавлены.-- " + ТекущаяДата(),"Не удалось добавить стартовые данные. -- " + ТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДаблКликПоПолю_ЗагрузитьДанныеИзXML(ТекущаяСтрока)
	
	ЗагрузкаИзXML = ТекущаяСтрока.ЗагрузкаИзXML;
	UIDСтартовыхДанных = ТекущаяСтрока.UIDСтартовыхДанных;
	ИмяНабораСтартовыхДанных = ТекущаяСтрока.ИмяНабораСтартовыхДанных;
	
	Если ЗагрузкаИзXML Тогда
		
		Если НЕ ЗначениеЗаполнено(UIDСтартовыхДанных) Тогда
			КиурКл.ОтобразитьПредупреждение("Для набора данных " + ИмяНабораСтартовыхДанных + " не инициализирована XML загрузки",ЭтаФорма);
			Возврат;
		КонецЕсли;
		
		ФиксированныеПараметры = новый Структура;
		ФиксированныеПараметры.Вставить("UIDСтартовыхДанных",UIDСтартовыхДанных);
		ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
		
		МодифицируемыеПараметры = новый Структура;
		
		Если НЕ ЗагрузитьДанные_в_БД_из_XML_СтартовыхДанныхСрв(ФиксированныеПараметры, МодифицируемыеПараметры) Тогда
			СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
			КиурКл.ОтобразитьПредупреждение("Не удалось выполнить загрузку данных, по причине: " + Символы.ПС + СообщениеОшибки ,ЭтаФорма);
			ТекущаяСтрока.ЗагрузкаВыполнена = Ложь;
			Возврат;
		КонецЕсли;	
	Иначе
		ИмяМетодаЗагрузки = ТекущаяСтрока.ИмяМетодаЗагрузки;
		
		Если ПустаяСтрока(ИмяМетодаЗагрузки) Тогда
			КиурКл.ОтобразитьПредупреждение("Не указано имя метода для загрузки стартовых данных " + ИмяНабораСтартовыхДанных,ЭтаФорма);
			Возврат;
		КонецЕсли;
			
		ФиксированныеПараметры = новый Структура;
		ФиксированныеПараметры.Вставить("ИмяМетодаЗагрузки",ИмяМетодаЗагрузки);
		ФиксированныеПараметры.Вставить("UIDСтартовыхДанных",UIDСтартовыхДанных);		
		ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
		
		МодифицируемыеПараметры = новый Структура;
		
		Если НЕ ВыполненМетодЗагрузкиСтартовыхДанныхСрв(ФиксированныеПараметры, МодифицируемыеПараметры) Тогда
			СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
			КиурКл.ОтобразитьПредупреждение("Не удалось выполнить загрузку данных, по причине: " + Символы.ПС + СообщениеОшибки ,ЭтаФорма);
			ТекущаяСтрока.ЗагрузкаВыполнена = Ложь;				
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	ТекущаяСтрока.ЗагрузкаВыполнена = Истина;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗагрузитьДанные_в_БД_из_XML_СтартовыхДанныхСрв(Знач ФиксированныеПараметры, МодифицируемыеПараметры)
	UIDСтартовыхДанных = ФиксированныеПараметры.UIDСтартовыхДанных;
	
	Если НЕ ЗначениеЗаполнено(UIDСтартовыхДанных) Тогда
		СообщениеОшибки = "Пустой UID хранилища стартовых данных";
		МодифицируемыеПараметры.Вставить("СообщениеОшибки",СообщениеОшибки);		
		Возврат Ложь;
	КонецЕсли;
	
	НеИзменяемыеПараметры = новый Структура;
	НеИзменяемыеПараметры.Вставить("UIDОбъекта",UIDСтартовыхДанных);	
	НеИзменяемыеПараметры = новый ФиксированнаяСтруктура(НеИзменяемыеПараметры);
	
	ХранилищеXMLСтартовыхДанных = РегистрыСведений.Tester_ШаблонныеДанные.ПолучитьШаблонныеДанныеОбъекта(НеИзменяемыеПараметры);
	
	Если ТипЗнч(ХранилищеXMLСтартовыхДанных) <> Тип("ХранилищеЗначения") Тогда
		СообщениеОшибки = "Некорректное содержимое регистра шаблонных данных.";
		МодифицируемыеПараметры.Вставить("СообщениеОшибки",СообщениеОшибки);
		Возврат Ложь;
	КонецЕсли;
		 
	XMLДанных = ХранилищеXMLСтартовыхДанных.Получить();
	
	Если ПустаяСтрока(XMLДанных) Тогда
		СообщениеОшибки = "Пустая XML данных.";
		МодифицируемыеПараметры.Вставить("СообщениеОшибки",СообщениеОшибки);		
		Возврат Ложь;
	КонецЕсли;	
	
	НеИзменяемыеПараметры = новый Структура;
	НеИзменяемыеПараметры.Вставить("XMLДанных",XMLДанных);
	НеИзменяемыеПараметры = новый ФиксированнаяСтруктура(НеИзменяемыеПараметры);
	
	ИзменяемыеПараметры = новый Структура;
	
	Если НЕ КиурСрв.ВыполненаЗагрузкаИзДанныхXML(НеИзменяемыеПараметры, ИзменяемыеПараметры) Тогда
		СообщениеОшибки = ?(ИзменяемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		МодифицируемыеПараметры.Вставить("СообщениеОшибки",СообщениеОшибки);
		Возврат Ложь;	
	КонецЕсли;	 
	
	Возврат Истина;
КонецФункции

&НаСервереБезКонтекста
Функция ВыполненМетодЗагрузкиСтартовыхДанныхСрв(Знач ФиксированныеПараметры, МодифицируемыеПараметры)
	
	ИмяМетодаЗагрузки = СокрЛП(ФиксированныеПараметры.ИмяМетодаЗагрузки);
	UIDСтартовыхДанных = ?(ФиксированныеПараметры.Свойство("UIDСтартовыхДанных",UIDСтартовыхДанных),UIDСтартовыхДанных,Неопределено);
	
	Если ПустаяСтрока(ИмяМетодаЗагрузки) Тогда
		СообщениеОшибки = "Пустое имя метода.";
		МодифицируемыеПараметры.Вставить("СообщениеОшибки",СообщениеОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	ХранилищеXMLСтартовыхДанных = Неопределено;
	Если ЗначениеЗаполнено(UIDСтартовыхДанных) Тогда
	
		НеИзменяемыеПараметры = новый Структура;
		НеИзменяемыеПараметры.Вставить("UIDОбъекта",UIDСтартовыхДанных);	
		НеИзменяемыеПараметры = новый ФиксированнаяСтруктура(НеИзменяемыеПараметры);
	
		ХранилищеXMLСтартовыхДанных = РегистрыСведений.Tester_ШаблонныеДанные.ПолучитьШаблонныеДанныеОбъекта(НеИзменяемыеПараметры);
	КонецЕсли;	
	
		
	НеИзменяемыеПараметры = новый Структура;
	НеИзменяемыеПараметры.Вставить("ХранилищеXMLСтартовыхДанных",ХранилищеXMLСтартовыхДанных);	
	НеИзменяемыеПараметры = новый ФиксированнаяСтруктура(НеИзменяемыеПараметры);
	
	ИзменяемыеПараметры = новый Структура;
	
	Попытка
		//УстановитьБезопасныйРежим(Истина);
		Выполнить ИмяМетодаЗагрузки + "(НеИзменяемыеПараметры, ИзменяемыеПараметры)";
		//УстановитьБезопасныйРежим(Ложь);
	Исключение
		СообщениеОшибки = ОписаниеОшибки();
		МодифицируемыеПараметры.Вставить("СообщениеОшибки",СообщениеОшибки);
		Возврат Ложь;	
	КонецПопытки;
			
	ВыполненоУспешно = ИзменяемыеПараметры.Успешно;
	СообщениеОшибки = ?(ИзменяемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");	
	
	МодифицируемыеПараметры.Вставить("СообщениеОшибки",СообщениеОшибки);
	Возврат ВыполненоУспешно;	
КонецФункции

&НаКлиенте
Процедура ОбработатьДаблКликПоПолю_ИмяНабораСтартовыхДанных(ТекущаяСтрока)
	
	ТранзитныеПараметры = КиурКл.ПолучитьСтруктуруТранзитныхПараметровФормыВыбора();	
	ТранзитныеПараметры.ТекстНадписи = "Введите новое имя стартового набора данных.";
	ТранзитныеПараметры.ДопДействие = "ИмяНабораСтартовыхДанных_ИзмененоИмя(РезультатВыбора, ТранзитныеПараметры)";
	ТранзитныеПараметры.ЗначениеВвода = ТекущаяСтрока.ИмяНабораСтартовыхДанных;
	
	ТранзитныеПараметры.Вставить("ТекущаяСтрока",ТекущаяСтрока);
	
	КиурКл.ОтобразитьВыборЗначения(ЭтаФорма,ТранзитныеПараметры);
	
КонецПроцедуры  

&НаКлиенте
Процедура ИмяНабораСтартовыхДанных_ИзмененоИмя(НовоеИмяНабораСтартовыхДанных, ТранзитныеПараметры) ЭКСПОРТ
	Если НЕ ЗначениеЗаполнено(НовоеИмяНабораСтартовыхДанных) Тогда
		Возврат;	
	КонецЕсли;
	
	ТекущаяСтрока = ТранзитныеПараметры.ТекущаяСтрока;
	
	Если ТекущаяСтрока.ИмяНабораСтартовыхДанных = НовоеИмяНабораСтартовыхДанных Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.ИмяНабораСтартовыхДанных = НовоеИмяНабораСтартовыхДанных;
	
	UIDСтартовыхДанных = ТекущаяСтрока.UIDСтартовыхДанных;
	НаименованиеШаблона = ТекущаяСтрока.ИмяНабораСтартовыхДанных;
	
	ФиксированныеПараметры = новый Структура;
	ФиксированныеПараметры.Вставить("UIDОбъекта", UIDСтартовыхДанных);
	ФиксированныеПараметры.Вставить("НаименованиеШаблона",НаименованиеШаблона);
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	МодифицируемыеПараметры = новый Структура;
	
	Если НЕ ИзменитьНаименованиеШаблонныхДанныхОбъектаСрв(ФиксированныеПараметры, МодифицируемыеПараметры) Тогда
		СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		СообщениеОшибки = "Не удалось изменить наименование шаблона в регистре шаблонных данных, по причине:" + Символы.ПС + СообщениеОшибки;
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки, ЭтаФорма);
		Возврат;
	КонецЕсли;
		
	ШаблонныыеДанныеСуществуют_в_Регистре = МодифицируемыеПараметры.ШаблонныыеДанныеСуществуют_в_Регистре;
	Если ШаблонныыеДанныеСуществуют_в_Регистре Тогда
		ТекстСообщения =  ?(Записать(),"Стартовые данные переименованы. -- " + ТекущаяДата(),"Не удалось переименовать стартовые данные. -- ") + ТекущаяДата();
		Сообщить(ТекстСообщения);
	КонецЕсли;		
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработатьДаблКликПоПолю_ИзменитьXML(ТекущаяСтрока)
//Загрузка нового XML файла
	ТранзитныеПарамеметры = новый Структура;
	ТранзитныеПарамеметры.Вставить("ТекущаяСтрока",ТекущаяСтрока);
	ОповещениеЗакрытияВыбораФайла = новый ОписаниеОповещения("ВыбранXML_СтартовыхДанных",ЭтаФорма,ТранзитныеПарамеметры);
	
	ПараметрыДиалогаВыбораФайла = новый Структура;
	ПараметрыДиалогаВыбораФайла.Вставить("Фильтр","Xml-файлы|*.xml");
	
	ФиксированныеПараметры = новый Структура;
	
	ФиксированныеПараметры.Вставить("ОповещениеЗакрытияВыбораФайла",ОповещениеЗакрытияВыбораФайла);
	ФиксированныеПараметры.Вставить("ПараметрыДиалогаВыбораФайла",ПараметрыДиалогаВыбораФайла);
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	
	МодифицируемыеПараметры = новый Структура;
	
	КиурКл.ОтобразитьДиалогВыбораФайла(ФиксированныеПараметры, МодифицируемыеПараметры);		
КонецПроцедуры

&НаКлиенте
Процедура ВыбранXML_СтартовыхДанных(ВыбранныеФайлы, ТранзитныеПараметры) ЭКСПОРТ
	Если НЕ ЗначениеЗаполнено(ВыбранныеФайлы) Тогда
		Возврат;
	КонецЕсли;
	
	ПолныйПутьКФайлу = ВыбранныеФайлы[0];  
	ТекущаяСтрока = ТранзитныеПараметры.ТекущаяСтрока;
	
	UIDСтартовыхДанных = ТекущаяСтрока.UIDСтартовыхДанных;
	НаименованиеШаблона = ТекущаяСтрока.ИмяНабораСтартовыхДанных;
	
	ФиксированныеПараметры = новый Структура;
	ФиксированныеПараметры.Вставить("ИмяФайлаXML",ПолныйПутьКФайлу);	
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	МодифицируемыеПараметры = новый Структура;
	
	Если НЕ КиурКлСрв.ПройденаПроверкаФормата_XML_Файла(ФиксированныеПараметры, МодифицируемыеПараметры) Тогда
		СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
		Возврат;
	КонецЕсли;	
	
	ЧтениеТекста = новый ЧтениеТекста(ПолныйПутьКФайлу);
	СодержимоеXML_Файла = ЧтениеТекста.Прочитать(); 
	ЧтениеТекста.Закрыть();
	
	Если НЕ ЗначениеЗаполнено(СодержимоеXML_Файла) Тогда
		СообщениеОшибки = "Файл пуст.";
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
		Возврат;	
	КонецЕсли;
	
	ХранилищеШаблонныхДанных = КиурСрв.СоздатьХранилищеЗначения(СодержимоеXML_Файла,9);
	
	ФиксированныеПараметры = новый Структура;
	ФиксированныеПараметры.Вставить("UIDОбъекта",UIDСтартовыхДанных);
	ФиксированныеПараметры.Вставить("ХранилищеШаблонныхДанных",ХранилищеШаблонныхДанных);
	ФиксированныеПараметры.Вставить("НаименованиеШаблона",НаименованиеШаблона);
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	МодифицируемыеПараметры = новый Структура;
	
	Если НЕ ЗаписатьШаблонныеДанныеОбъектаСрв(ФиксированныеПараметры,МодифицируемыеПараметры) Тогда
		СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		СообщениеОшибки = "Не удалось изменить запись в регистре шаблонных данных, по причине:" + Символы.ПС + СообщениеОшибки;
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
		Возврат;
	КонецЕсли;
		
	ТекстСообщения = ?(Записать(),"СтартовыеДанные сохранены. -- " + ТекущаяДата(),"Не удалось сохранить стартовые данные. -- " + ТекущаяДата());
	Сообщить(ТекстСообщения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработатьДаблКликПоПолю_ВыгрузитьXML(ТекущаяСтрока)
	
	ФиксированныеПараметры = новый Структура;
	ФиксированныеПараметры.Вставить("UIDОбъекта",ТекущаяСтрока.UIDСтартовыхДанных);
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	МодифицируемыеПараметры = новый Структура;
		
	ХранилищеXML = ПолучитьШаблонныеДанныеОбъектаСрв(ФиксированныеПараметры,МодифицируемыеПараметры);
	Если ХранилищеXML = Неопределено Тогда
		СообщениеОшибки = ?(МодифицируемыеПараметры.Свойство("СообщениеОшибки",СообщениеОшибки),СообщениеОшибки,"");
		СообщениеОшибки = "Не удалось прочитать запись из регистра шаблонных данных, по причине:" + Символы.ПС + СообщениеОшибки;
		КиурКл.ОтобразитьПредупреждение(СообщениеОшибки,ЭтаФорма);
		Возврат;	
	КонецЕсли;
	
	ДанныеXML_ДляЗаписи = КиурСрв.ВернутьЗначениеХранилища(ХранилищеXML);
	
	
	ПараметрыДиалогаСохраненияФайла = новый Структура;
	ПараметрыДиалогаСохраненияФайла.Вставить("Фильтр","Xml-файлы|*.xml");	
	
	ФиксированныеПараметры = новый Структура;	
	ФиксированныеПараметры.Вставить("ПараметрыДиалогаСохраненияФайла",ПараметрыДиалогаСохраненияФайла);
	ФиксированныеПараметры.Вставить("ФормаВладелец",ЭтаФорма); 
	ФиксированныеПараметры.Вставить("РасширениеФайлаДанных",".xml"); 
	ФиксированныеПараметры.Вставить("ЗаписываемыеДанные",ДанныеXML_ДляЗаписи); 	
	ФиксированныеПараметры = новый ФиксированнаяСтруктура(ФиксированныеПараметры);
	
	МодифицируемыеПараметры = новый Структура;
	КиурКл.ОтобразитьДиалогСохраненияФайла(ФиксированныеПараметры,МодифицируемыеПараметры);	
КонецПроцедуры



#КонецОбласти

 &НаСервереБезКонтекста
Функция ЗаписатьШаблонныеДанныеОбъектаСрв(Знач ФиксированныеПараметры,МодифицируемыеПараметры) 
	Возврат РегистрыСведений.Tester_ШаблонныеДанные.ЗаписатьШаблонныеДанныеОбъекта(ФиксированныеПараметры,МодифицируемыеПараметры);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьШаблонныеДанныеОбъектаСрв(Знач ФиксированныеПараметры,МодифицируемыеПараметры)
	Возврат РегистрыСведений.Tester_ШаблонныеДанные.ПолучитьШаблонныеДанныеОбъекта(ФиксированныеПараметры,МодифицируемыеПараметры);	
КонецФункции

&НаСервереБезКонтекста
Функция ИзменитьНаименованиеШаблонныхДанныхОбъектаСрв(Знач ФиксированныеПараметры,МодифицируемыеПараметры)
	Возврат РегистрыСведений.Tester_ШаблонныеДанные.ИзменитьНаименованиеШаблонныхДанныхОбъекта(ФиксированныеПараметры,МодифицируемыеПараметры);	
КонецФункции



#КонецОбласти

/////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
//////////////////////////////////Для удаления\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

#Область ДляУдаления

#КонецОбласти

////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\//////////////////////////////////////
////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\Для удаления/////////////////////////////
////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\//////////////////////////////////////